apiVersion: v1
kind: Namespace
metadata:
  name: gpustack
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gpustack-server-data
  namespace: gpustack
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gpustack-server
  namespace: gpustack
  labels:
    app: gpustack-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gpustack-server
  template:
    metadata:
      labels:
        app: gpustack-server
    spec:
      containers:
        - name: gpustack-server
          image: gpustack/gpustack
          args: ["--disable-worker", "--token", "GPUSTACK_TOKEN_ABCDEFGHIJKLMNOPQRSTUVWXYZ"]
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /var/lib/gpustack
              name: gpustack-server-data
      restartPolicy: Always
      volumes:
        - name: gpustack-server-data
          persistentVolumeClaim:
            claimName: gpustack-server-data
---
apiVersion: v1
kind: Service
metadata:
  name: gpustack-server
  namespace: gpustack
  labels:
    app: gpustack-server
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: gpustack-server
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gpustack-server-ingress
  namespace: gpustack
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: gpustack.gpustack.ai # 更改为实际访问域名
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: gpustack-server
                port:
                  number: 80
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: gpustack-worker-data
spec:
  capacity:
    storage: 500Gi
  accessModes:
    - ReadWriteMany
  nfs:
    server: 192.168.1.111
    path: /data/gpustack_cache
  persistentVolumeReclaimPolicy: Retain
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gpustack-worker-data
  namespace: gpustack
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 500Gi
  volumeMode: Filesystem
  storageClassName: ""
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: gpustack-worker
  namespace: gpustack
  labels:
    app: gpustack-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gpustack-worker
  template:
    metadata:
      labels:
        app: gpustack-worker
    spec:
      hostIPC: true
      containers:
      - name: gpustack-worker
        image: gpustack/gpustack
        args:
          - "--server-url"
          - "http://gpustack-server.gpustack.svc"
          - "--token"
          - "GPUSTACK_TOKEN_ABCDEFGHIJKLMNOPQRSTUVWXYZ"
        volumeMounts:
        - name: gpustack-data
          mountPath: /var/lib/gpustack/cache
        resources:
          limits:
            nvidia.com/gpu: 8
      volumes:
      - name: gpustack-data
        persistentVolumeClaim:
          claimName: gpustack-worker-data
